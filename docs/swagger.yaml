basePath: /
definitions:
  handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  handlers.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  handlers.RefreshResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.RegisterResponse:
    properties:
      email:
        type: string
      user_id:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Authentication Service API
  version: "1.0"
paths:
  /auth/confirm:
    post:
      consumes:
      - application/json
      description: This endpoint confirms user registration using the provided email
        and register_token.
      parameters:
      - description: User email
        in: query
        name: email
        required: true
        type: string
      - description: Register token
        in: query
        name: register_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Confirm user registration
      tags:
      - Auth
  /auth/google/login:
    get:
      description: Redirects to Google OAuth login page.
      responses:
        "303":
          description: Redirecting to Google OAuth
          schema:
            type: string
      summary: Google OAuth Login
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password
      parameters:
      - description: Login Request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the access token using the refresh token
      parameters:
      - description: Refresh Request
        in: body
        name: refresh
        required: true
        schema:
          $ref: '#/definitions/handlers.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RefreshResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with email and password
      parameters:
      - description: Register Request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      - description: Referral Code
        in: query
        name: refcode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RegisterResponse'
        "400":
          description: Missing required parameters
          schema:
            type: string
        "409":
          description: User with this email already exists
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - Auth
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
