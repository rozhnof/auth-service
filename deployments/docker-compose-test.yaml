services:
  app:
    build:
      context: ../
      dockerfile: build/docker/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "9090:8080" 
    environment:
      - POSTGRES_ADDRESS=postgres
      - POSTGRES_PORT=5432
      - REDIS_ADDRESS=redis
      - REDIS_PORT=6379
    volumes:
      - ../config:/app/config
    env_file: ".env"

  postgres:
    image: postgres:13
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 30s
      retries: 5
    ports:
      - "54321:5432"
    env_file: ".env"

  migrate:
    image: migrate/migrate:4
    command: -path=../migrations/ -database "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=${POSTGRES_SSLMODE}" up
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../migrations:/migrations:ro
    env_file: ".env"

  redis:
    image: redis:latest
    ports:
      - "63790:6379"
    volumes:
      - ../config/test-redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ../config/test-redis/users.acl:/usr/local/etc/redis/users.acl
    command: redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 30s
      retries: 5
    restart: always

  kafka:
    image: confluentinc/confluent-local:latest
    hostname: kafka
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29091
      KAFKA_CONTROLLER_QUORUM_VOTERS:  1@kafka:29092 
      KAFKA_LISTENERS:  PLAINTEXT://kafka:29091,CONTROLLER://kafka:29092
